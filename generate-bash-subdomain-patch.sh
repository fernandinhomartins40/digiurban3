#!/bin/bash

# PATCH PARA GENERATE.BASH - SUPORTE A SUBDOM√çNIOS
# Arquivo: generate-bash-subdomain-patch.sh
# Este arquivo cont√©m as modifica√ß√µes necess√°rias para suporte a subdom√≠nios no generate.bash

echo "üîß ============================================"
echo "üîß PATCH PARA GENERATE.BASH - SUBDOM√çNIOS"
echo "üîß ============================================"

# ============================================
# 1. DETEC√á√ÉO DE MODO DE SUBDOM√çNIO
# ============================================

# Adicionar esta se√ß√£o ANTES da configura√ß√£o de URLs existente

echo "üåê Verificando modo de configura√ß√£o de URLs..."

# Verificar se deve usar subdom√≠nios
if [ -n "$MANAGER_USE_SUBDOMAIN" ] && [ "$MANAGER_USE_SUBDOMAIN" = "true" ]; then
    if [ -n "$MANAGER_SUBDOMAIN" ] && [ -n "$MANAGER_DOMAIN_SUFFIX" ]; then
        echo "üåê Modo SUBDOM√çNIO detectado"
        echo "üåê Subdom√≠nio: $MANAGER_SUBDOMAIN"
        echo "üåê Dom√≠nio: $MANAGER_DOMAIN_SUFFIX"
        export URL_MODE="subdomain"
        export SUBDOMAIN_URL="https://${MANAGER_SUBDOMAIN}.${MANAGER_DOMAIN_SUFFIX}"
    else
        echo "‚ö†Ô∏è  Modo subdom√≠nio solicitado mas vari√°veis incompletas"
        echo "‚ö†Ô∏è  MANAGER_SUBDOMAIN: $MANAGER_SUBDOMAIN"
        echo "‚ö†Ô∏è  MANAGER_DOMAIN_SUFFIX: $MANAGER_DOMAIN_SUFFIX"
        echo "üîÑ Fallback para modo IP:porta"
        export URL_MODE="ip_port"
    fi
else
    echo "üåê Modo IP:PORTA (padr√£o)"
    export URL_MODE="ip_port"
fi

# ============================================
# 2. CONFIGURA√á√ÉO DE URLs BASEADA NO MODO
# ============================================

# SUBSTITUIR a se√ß√£o existente de configura√ß√£o de URLs por esta:

echo "üîß Configurando URLs baseado no modo: $URL_MODE"

if [ "$URL_MODE" = "subdomain" ]; then
    # ====== MODO SUBDOM√çNIO ======
    echo "üåê Configurando URLs com subdom√≠nio: $SUBDOMAIN_URL"
    
    export API_EXTERNAL_URL="$SUBDOMAIN_URL"
    export SUPABASE_PUBLIC_URL="$SUBDOMAIN_URL"
    
    # SITE_URL deve apontar para o manager principal (n√£o para a inst√¢ncia)
    export SITE_URL="https://ultrabase.com.br"
    
    # Logs de confirma√ß√£o
    echo "‚úÖ API_EXTERNAL_URL: $API_EXTERNAL_URL"
    echo "‚úÖ SUPABASE_PUBLIC_URL: $SUPABASE_PUBLIC_URL"
    echo "‚úÖ SITE_URL: $SITE_URL"
    
elif [ "$URL_MODE" = "ip_port" ]; then
    # ====== MODO IP:PORTA (COMPORTAMENTO ATUAL) ======
    echo "üåê Configurando URLs com IP:porta"
    
    if [ -n "$MANAGER_EXTERNAL_IP" ]; then
        export API_EXTERNAL_URL="http://${MANAGER_EXTERNAL_IP}:${KONG_HTTP_PORT}"
        export SITE_URL="http://${MANAGER_EXTERNAL_IP}:3000"
        export SUPABASE_PUBLIC_URL="http://${MANAGER_EXTERNAL_IP}:${KONG_HTTP_PORT}"
    else
        export API_EXTERNAL_URL="http://0.0.0.0:${KONG_HTTP_PORT}"
        export SITE_URL="http://0.0.0.0:3000"
        export SUPABASE_PUBLIC_URL="http://0.0.0.0:${KONG_HTTP_PORT}"
    fi
    
    # Logs de confirma√ß√£o
    echo "‚úÖ API_EXTERNAL_URL: $API_EXTERNAL_URL"
    echo "‚úÖ SUPABASE_PUBLIC_URL: $SUPABASE_PUBLIC_URL"
    echo "‚úÖ SITE_URL: $SITE_URL"
    
else
    echo "‚ùå Modo de URL inv√°lido: $URL_MODE"
    exit 1
fi

# ============================================
# 3. VALIDA√á√ÉO DAS URLs GERADAS
# ============================================

echo "üîç Validando URLs configuradas..."

# Verificar se as URLs est√£o definidas
if [ -z "$API_EXTERNAL_URL" ] || [ -z "$SUPABASE_PUBLIC_URL" ]; then
    echo "‚ùå Erro: URLs n√£o foram configuradas corretamente"
    echo "‚ùå API_EXTERNAL_URL: $API_EXTERNAL_URL"
    echo "‚ùå SUPABASE_PUBLIC_URL: $SUPABASE_PUBLIC_URL"
    exit 1
fi

# Verificar formato das URLs
if [[ "$API_EXTERNAL_URL" != http* ]]; then
    echo "‚ùå Erro: API_EXTERNAL_URL deve come√ßar com http: $API_EXTERNAL_URL"
    exit 1
fi

echo "‚úÖ URLs validadas com sucesso"

# ============================================
# 4. INFORMA√á√ïES DE DEBUG
# ============================================

echo "üìã ============================================"
echo "üìã CONFIGURA√á√ÉO FINAL DE URLs"
echo "üìã ============================================"
echo "üìã Modo: $URL_MODE"
echo "üìã Instance ID: $INSTANCE_ID"
if [ "$URL_MODE" = "subdomain" ]; then
    echo "üìã Subdom√≠nio: $MANAGER_SUBDOMAIN"
    echo "üìã Dom√≠nio completo: $SUBDOMAIN_URL"
fi
echo "üìã API URL: $API_EXTERNAL_URL"
echo "üìã Public URL: $SUPABASE_PUBLIC_URL"
echo "üìã Site URL: $SITE_URL"
echo "üìã Kong HTTP Port: $KONG_HTTP_PORT"
echo "üìã Kong HTTPS Port: $KONG_HTTPS_PORT"
echo "üìã ============================================"

# ============================================
# 5. CONTINUA√á√ÉO DO SCRIPT ORIGINAL
# ============================================

echo "üîß Continuando com cria√ß√£o da inst√¢ncia..."

# Resto do script generate.bash continua normalmente...

# ============================================
# INSTRU√á√ïES DE APLICA√á√ÉO
# ============================================

cat << 'EOF'

üîß INSTRU√á√ïES PARA APLICAR NO GENERATE.BASH:

1. Fazer backup do generate.bash original:
   cp generate.bash generate.bash.backup

2. Localizar a se√ß√£o de configura√ß√£o de URLs (procurar por "API_EXTERNAL_URL")

3. SUBSTITUIR toda a se√ß√£o existente por este c√≥digo

4. A se√ß√£o original deve estar entre as linhas:
   # Set values for required variables...
   # at√©...
   # export SUPABASE_PUBLIC_URL=...

5. Manter o resto do script inalterado

6. Testar com uma nova inst√¢ncia

7. Verificar logs detalhados para debug

EOF